Emp 的 bean：
public class EmpModel {
	private String resAll;
	public String getResAll() {
		return resAll;
	}
	public void setResAll(String resAll) {
		this.resAll = resAll;
	}
}

-==========================-==========================-==========================-==========================

Action：
	在登录操作的时候，把该用户 允许的操作权限，放入 buffer：


	//加载当前登录人对应的所有可操作资源信息

                    List<ResModel> resList = resEbi.getAllByEmp(loginEm.getUuid());

                    StringBuilder sbf = new StringBuilder();

                    for(ResModel rm : resList){
                    	sbf.append(rm.getUrl());		拿到该用户允许的请求
                    	sbf.append(",");
                    }

                    loginEm.setResAll(sbf.toString());						把允许操作的请求转成 字符串，放到 Empbeam 里面
                    putSession(EmpModel.EMP_LOGIN_USER_OBJECT_NAME, loginEm);			把 Emp 对象整体（包含上面处理完的String） 放到 session


-==========================-==========================-==========================-==========================

service :
	public List<ResModel> getAllByEmp(Long uuid) {
		return resDao.getAllByEmpUuid(uuid);
	}

-==========================-==========================-==========================-==========================
dao：
	public List<ResModel> getAllByEmpUuid(Long uuid) {		通过用户 uiuid 查询 用户 允许请求的 资源

		//资源与员工没有直接关系
		//资源与角色有关系，角色与员工有关系
		//关系：资源->角色->员工
		
		//员工->角色->资源
		/*
		员工找角色
		员工1		角色1,2
		员工2		角色3,4
					角色5,6,7
		员工3			
		from EmpModel em join em.roles		//获取所有具有角色的员工信息 
		from RoleModel rm join rm.reses		//获取所有具有资源的角色信息
		from EmpModel em join em.roles rm join rm.reses res	//获取具有资源的角色的员工信息
		
		//默认不写select查询的是所有被关联的信息总和
		select em,rm,res from EmpModel em join em.roles rm join rm.reses res
		//仅仅需要资源信息
		select res from EmpModel em join em.roles rm join rm.reses res 
		*/
		//此处包含一个小BUG，第五天解决  distinct
		String hql ="select distinct res from EmpModel em join em.roles rm join rm.reses res where em.uuid = ?";
		return this.getHibernateTemplate().find(hql,uuid);
	}

}

=========================-==========================-==========================-==========================

在拦截器里，判断用户的请求，是否拥有其权限：

	//loginEm.getResAll即为当前登录人可进行的所有资源数据字符串

	if(loginEm.getResAll().contains(allName)){				我们在Action已经把  允许请求的String  放到 辅助视图值里面
		return invocation.invoke();
	}
		



