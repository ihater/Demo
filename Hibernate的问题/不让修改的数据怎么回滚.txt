我们修改实体属性的时候，有些属性，比如性别，出生日期不让修改

public void update(EmpModel em) {
		
		//快照更新

		//1.查询出数据
		EmpModel temp = empDao.get(em.getUuid());					查出原来的对象

		temp.setName(em.getName());					可以修改的就赋值
		temp.setEmail(em.getEmail());
		temp.setTele(em.getTele());
		temp.setGender(em.getGender());
		temp.setAddress(em.getAddress());

		temp.setDm(em.getDm());				这里设置完 temp，Hibernate 会用快照更新

	}

========================================================================================

看似正确，其实错误的写法！！！！！！！

		temp.getDm().setUuid(em.getDm().getUuid());		修改部门，不能直接改 外键 ID
								报错信息：DM的ID是一个实例，我们企图 从 2 修改成  5 ，
									框架不给这么干（万一这个ID是乱起不存在的呢？）3

底层原理：我们 请求 emp_update 操作，EmpAction 拿到修改完的  Emp 和 Dm（部门）的 uuid	
	在 Dao 层 ，要修改 先 查 Emp 的数据，关联了一个 ID为  2 的 DM实体			【  id：2    部门：销售部  】

	我们   em.getDm().getUuid())							【  id ：5   部门：技术部  】

	我们直接改   Emp 的 DM ID     temp.getDm().setUuid（5）				【  id：5    部门：销售部  】
	
	这样，在Hibernate 的内存 中， 就有  两个不同的 DM 实体，对应 相同的  ID ，这是不允许的

##############################################################

在Hibernate 的内存中，不同的实体对象，不可以有相同的 ID 值

##############################################################




========================================================================================

		
		/*
		//做修改功能外界传递了一个em对象，有些东西不让修改
		//不允许修改，将你修改的值恢复


		EmpModel temp = empDao.get(em.getUuid());				加载了一个对象。从数据库加载的 temp
		
		em.setUserName(temp.getUserName());					回滚我们上传的对象
		em.setBirthday(temp.getBirthday());					回滚我们上传的对象
		empDao.update(em);						我们上传的对象和加载的对象												拥有相同的  ID，报错
		*/





总结：   如果对我们上传的数据，有些不让修改，我们的做法是：
		加载我们数据库的数据，再对可以修改的进行复制
		然后，利用 快照更新，自动  更新我们 加载的   对象
